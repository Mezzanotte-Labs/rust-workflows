name: Rust Compile and Release


on: 
  workflow_call:

jobs:
  compile:
    runs-on: ubuntu-latest
    continue-on-error: true
    strategy:
      matrix:
        include:
          - target: "x86_64-unknown-linux-gnu"
            dependencies: |
              sudo apt-get update
              sudo apt-get install -y pkg-config libssl-dev
          - target: "aarch64-unknown-linux-gnu"
            dependencies: |
              sudo apt-get update
              sudo apt-get install -y pkg-config libssl-dev
          - target: "x86_64-unknown-linux-musl"
            dependencies: |
              sudo apt-get update
              sudo apt-get install -y pkg-config libssl-dev

    steps:
      - uses: actions/checkout@v2

      - name: Edit Cargo.toml
        run: |
          sed -i 's/^openssl.*/openssl = {version = "0.10", features = ["vendored"]}/g' Cargo.toml
          echo '[profile.release]' >> Cargo.toml
          echo 'opt-level = 3' >> Cargo.toml
          echo 'debug = false' >> Cargo.toml
          echo 'debug-assertions = false' >> Cargo.toml
          echo 'overflow-checks = true' >> Cargo.toml
          echo 'lto = "fat"' >> Cargo.toml
          echo 'strip = true' >> Cargo.toml
          echo 'panic = "abort"' >> Cargo.toml
          echo 'incremental = false' >> Cargo.toml
          echo 'codegen-units = 1' >> Cargo.toml
          echo 'rpath = false' >> Cargo.toml

      - name: Install dependencies
        run: ${{ matrix.include.dependencies }}

      - name: Generate release tag
        run: echo "DATE=$(date +'%Y-%m-%dT%H.%M.%S')" >> $GITHUB_ENV

      - name: Get Package Name
        uses: SebRollen/toml-action@v1.0.1
        id: package_name
        with:
          file: 'Cargo.toml'
          field: 'package.name'

      - name: Rust Toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          target: ${{ matrix.target }}
          override: true

      - name: Build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --target=${{ matrix.include.target }}

      - name: Upload to Releases
        uses: softprops/action-gh-release@v1
        with:
          tag_name: Main_Release_${{ env.DATE }}
          files: target/${{ matrix.include.target }}/release/${{ steps.package_name.outputs.value }}
          generate_release_notes: true
