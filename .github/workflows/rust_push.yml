name: Rust Compile and Release


on: 
  workflow_call:

jobs:
  compile:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Edit Cargo.toml
        run: |
          sed -i 's/^openssl.*/openssl = {version = "0.10", features = ["vendored"]}/g' Cargo.toml
          echo '[profile.release]' >> Cargo.toml
          echo 'opt-level = 3' >> Cargo.toml
          echo 'debug = false' >> Cargo.toml
          echo 'debug-assertions = false' >> Cargo.toml
          echo 'overflow-checks = true' >> Cargo.toml
          echo 'lto = "fat"' >> Cargo.toml
          echo 'strip = true' >> Cargo.toml
          echo 'panic = "abort"' >> Cargo.toml
          echo 'incremental = false' >> Cargo.toml
          echo 'codegen-units = 1' >> Cargo.toml
          echo 'rpath = false' >> Cargo.toml

      - name: Install packages
        run: |
          sudo apt-get update
          sudo apt-get install -y musl-tools
          sudo apt-get install -y pkg-config
          sudo apt-get install -y libxss-dev
          sudo apt-get install -y libssl-dev

      - name: Setup openssl and pkg-config
        run: |
          echo "OPENSSL_DIR=/usr/lib/x86_64-linux-gnu" >> $GITHUB_ENV
          echo "OPENSSL_INCLUDE_DIR=/usr/include/openssl" >> $GITHUB_ENV
          echo "PKG_CONFIG_ALLOW_CROSS=1" >> $GITHUB_ENV

      - name: Setup Toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          target: x86_64-unknown-linux-musl
          override: true

      - name: Compile Binary
        uses: actions-rs/cargo@v1
        env:
          RUSTFLAGS: '-C target-feature=+crt-static -C link-self-contained=yes'
        with:
          command: build
          args: --release --target x86_64-unknown-linux-musl

      - name: Debug
        run: |
          ls
          pwd
          find /home/runner/ -type f -name rust-binary-upload-testing

      - name: Generate release tag
        run: echo "DATE=$(date +'%Y-%m-%dT%H.%M.%S')" >> $GITHUB_ENV

      - name: Get Package Name
        uses: SebRollen/toml-action@v1.0.1
        id: package_name
        with:
          file: 'Cargo.toml'
          field: 'package.name'

      - name: Upload to Releases
        uses: softprops/action-gh-release@v1
        with:
          tag_name: Main_Release_${{ env.DATE }}
          files: target/x86_64-unknown-linux-musl/release/${{ steps.package_name.outputs.value }}
          generate_release_notes: true
